version: "3.8"
services:
  shopping_app_mongo:
    container_name: shopping_app_mongo
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: testd
    ports:
      - 27010:27017
    networks: 
      - shopping_app_ntk

  mongo-express:
    container_name: mongo-express
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_SERVER: shopping_app_mongo
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: testd
      ME_CONFIG_MONGODB_URL: mongodb://root:testd@mongo:27010/
    depends_on:
      - shopping_app_mongo
    networks: 
      - shopping_app_ntk



networks:
  shopping_app_ntk:
    driver: bridge
    
  # kafka_network:
  #   driver: bridge

  # zookeeper:
  #   container_name: kafka-zooker
  #   image: confluentinc/cp-zookeeper:latest
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #     ZOOKEEPER_TICK_TIME: 2000
  #   ports:
  #     - 9312:2181
  #   networks: 
  #     - kafka_network
  
  # kafka:
  #   container_name: kafka-server
  #   image: confluentinc/cp-kafka:latest
  #   depends_on:
  #     - zookeeper
  #   ports:
  #     - 29092:29092
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
  #     KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
  #   networks: 
  #     - kafka_network

  # kafka-magic:
  #   container_name: kafka-magic
  #   image: digitsy/kafka-magic
  #   ports:
  #     - "8012:80"
  #   environment:
  #     KMAGIC_ALLOW_TOPIC_DELETE: "true"
  #     KMAGIC_ALLOW_SCHEMA_DELETE: "true"
  #   networks: 
  #     - kafka_network